version: '3.9'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: shortUrlFrontend
    ports:
      - "3001:80"
    depends_on:
      - app
    networks:
      - gateway

  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: shortUrlBackend
    ports:
      - '3000:3000'
    depends_on:
      postgresql:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - gateway
      - apinet

  postgresql:
    image: postgres
    container_name: postgresql
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example
      POSTGRES_DB: shorturl
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - apinet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - app
      - frontend
    networks:
      - gateway

volumes:
  pgdata:

networks:
  apinet:
    driver: bridge
    ipam:
      config:
        - subnet: "192.168.32.0/24"
  gateway:
    driver: bridge
